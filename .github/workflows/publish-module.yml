name: 'Publish module'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Type of version bump for this release.'
        required: false
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build-publish:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 💼
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version-file: '.nvmrc'

      - name: Check for critical vulnerabilities 🔎
        run: npm audit --audit-level critical --omit=dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install pnpm 🛠️
        uses: pnpm/action-setup@v3
        id: pnpm-install
        with:
          version: 9

      - name: Install dependencies 📦
        run: pnpm install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build the module 🏗️
        run: pnpm build:module

      - name: Set version 📝
        id: set-version
        if: inputs.version && inputs.version != 'none'
        run: |
          git config --local user.email "github@action.com"
          git config --local user.name "GitHub Action"

          NEW_VERSION=$(npm version ${{ inputs.version }}  --message $'Update version to %s\n\n[skip ci]')

          git push --follow-tags --no-verify

          # set the version as output to be printed later
          echo "new-version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Publish the package 📚
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: nbotond20/create-release@v1.2.3
        with:
          use-sem-ver: true
          tag: ${{ steps.set-version.outputs.new-version }}
